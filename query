spark.sql("""

select 
s.store_key
, s.bu_key
, s.store_id
, s.store_operation as division_type_code
, s.store_number as store_code
, s.store_name
, s.store_alternate_name as store_other_name
, s.store_type as store_format_code
, s.store_type_description as store_format_name
, s.store_manager_id as store_manager_code
, s.store_manager_name
, s.store_street_address_line_1 as address_1
, s.store_street_address_line_2 as address_2
, s.store_street_address_line_3 as address_3
, s.store_street_address_line_4 as address_4
, s.store_street_address_line_5 as address_5
, s.store_phone_number as phone_num
, s.store_fax_number as fax_num
, s.store_country as country_name
, s.store_region as region_name
, s.store_city as city_name
, s.store_district as district_name
, s.store_county as county_name
, s.store_province as province_name
, s.store_open_date
, s.store_close_date
, s.last_relocation_date as store_move_date
, s.last_remodel_date as store_renovation_date
, s.zip_code
, s.is_web_store as web_store_flag
, s.is_franchise_store as franchise_store_flag
--, s.is_closed as store_closed_flag is_closed flag is not correct
, case when s.store_close_date is not null then 'Y' else 'N' end as store_closed_flag
, s.is_test_store as test_store_flag
, s.is_comparable_store as comp_store_flag
, s.etl_first_load as first_load_date
, s.etl_last_update as last_update_date

, h5.hierarchy_display_name AS h1_hierarchy_display_name

, trim(split(h1.hierarchy_display_name,'>')[0]) AS h1_l1_hierarchy_name
, h1.hierarchy_name AS h1_l1_hierarchy_code

, trim(split(h2.hierarchy_display_name,'>')[1]) AS h1_l2_hierarchy_name
, h2.hierarchy_name AS h1_l2_hierarchy_code

, trim(split(h3.hierarchy_display_name,'>')[2]) AS h1_l3_hierarchy_name
, h3.hierarchy_name AS h1_l3_hierarchy_code

, trim(split(h4.hierarchy_display_name,'>')[3]) AS h1_4_hierarchy_name
, h4.hierarchy_name AS h1_l4_hierarchy_code

, trim(split(h5.hierarchy_display_name,'>')[4]) AS h1_l5_hierarchy_name
, h5.hierarchy_name AS h1_l5_hierarchy_code

from rdm.d_store s
left join rdm.d_hierarchies hs5 on s.store_hierarchies_key = hs5.hierarchies_key and hierarchy_name = 'Store'
left join rdm.d_hierarchy h5 on hs5.hierarchy_key = h5.hierarchy_key and h5.hierarchy_level = 5
left join rdm.d_hierarchy h4 on h5.parent_key = h4.hierarchy_key
left join rdm.d_hierarchy h3 on h4.parent_key = h3.hierarchy_key
left join rdm.d_hierarchy h2 on h3.parent_key = h2.hierarchy_key
left join rdm.d_hierarchy h1 on h2.parent_key = h1.hierarchy_key

order by s.store_key
""").write.mode("overwrite").saveAsTable("default.store")
